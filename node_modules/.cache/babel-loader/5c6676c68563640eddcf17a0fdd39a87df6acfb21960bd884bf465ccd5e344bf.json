{"ast":null,"code":"var _jsxFileName = \"/Users/amiyaraskar/UT/23-24/HCI/cs378-p4/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// This imports bootstrap css styles. You can use bootstrap or your own classes by using the className attribute in your elements.\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!city) return;\n    const fetchWeatherData = async (lat, lon) => {\n      const response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=temperature_2m,precipitation&start=now&end=now+12h`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setWeatherData(data);\n    };\n    fetchData();\n  }, [city]);\n  const handleCityChange = event => {\n    setCity(event.target.value);\n  };\n  const handleButtonClick = cityName => {\n    setCity(cityName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      onChange: handleCityChange,\n      placeholder: \"Enter city name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('Houstin'),\n      children: \"Houston\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('Austin'),\n      children: \"Austin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('Dallas'),\n      children: \"Dallas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: weatherData.city.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", weatherData.weather.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6ORnHgug7+eA/2IQcD+TlziMTmc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","city","setCity","weatherData","setWeatherData","error","setError","fetchWeatherData","lat","lon","response","fetch","ok","Error","status","data","json","fetchData","handleCityChange","event","target","value","handleButtonClick","cityName","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","temperature","weather","description","_c","$RefreshReg$"],"sources":["/Users/amiyaraskar/UT/23-24/HCI/cs378-p4/src/App.js"],"sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \n// This imports bootstrap css styles. You can use bootstrap or your own classes by using the className attribute in your elements.\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!city) return;\n\n    const fetchWeatherData = async (lat, lon) => {\n      const response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=temperature_2m,precipitation&start=now&end=now+12h`);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      \n      setWeatherData(data);\n      };\n\n    fetchData();\n  }, [city]);\n\n  const handleCityChange = (event) => {\n    setCity(event.target.value);\n  };\n\n  const handleButtonClick = (cityName) => {\n    setCity(cityName);\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={city} onChange={handleCityChange} placeholder=\"Enter city name\" />\n      <button onClick={() => handleButtonClick('Houstin')}>Houston</button>\n      <button onClick={() => handleButtonClick('Austin')}>Austin</button>\n      <button onClick={() => handleButtonClick('Dallas')}>Dallas</button>\n      \n      {error && <div>Error: {error}</div>}\n      \n      {weatherData && (\n        <div>\n          <h2>{weatherData.city.name}</h2>\n          <p>Temperature: {weatherData.temperature}Â°C</p>\n          <p>Description: {weatherData.weather.description}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}