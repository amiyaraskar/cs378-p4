{"ast":null,"code":"var _jsxFileName = \"/Users/amiyaraskar/UT/23-24/HCI/cs378-p4/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'your_api_key_here'; // Your Open Meteo API key\n\nconst fetchWeatherData = async (lat, lon, setWeatherData, setError) => {\n  try {\n    const response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=temperature_2m,precipitation&start=now&end=now+12h`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    setWeatherData(data);\n    setError(null);\n  } catch (error) {\n    setError('Failed to fetch weather data');\n    setWeatherData(null);\n  }\n};\nfunction App() {\n  _s();\n  const [lat, setLat] = useState('');\n  const [lon, setLon] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n  const handleLatChange = e => {\n    setLat(e.target.value);\n  };\n  const handleLonChange = e => {\n    setLon(e.target.value);\n  };\n  const handleSubmit = () => {\n    fetchWeatherData(lat, lon, setWeatherData, setError);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Latitude:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: lat,\n        onChange: handleLatChange,\n        placeholder: \"Enter latitude\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Longitude:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: lon,\n        onChange: handleLonChange,\n        placeholder: \"Enter longitude\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Fetch Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.hourly.temperature_2m[0].value, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Precipitation: \", weatherData.hourly.precipitation[0].value, \" mm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4/O4jnh1Yi8AlWmTxDoCRAo3MUc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","API_KEY","fetchWeatherData","lat","lon","setWeatherData","setError","response","fetch","ok","Error","status","data","json","error","App","_s","setLat","setLon","weatherData","handleLatChange","e","target","value","handleLonChange","handleSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","hourly","temperature_2m","precipitation","_c","$RefreshReg$"],"sources":["/Users/amiyaraskar/UT/23-24/HCI/cs378-p4/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst API_KEY = 'your_api_key_here'; // Your Open Meteo API key\n\nconst fetchWeatherData = async (lat, lon, setWeatherData, setError) => {\n  try {\n    const response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=temperature_2m,precipitation&start=now&end=now+12h`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    setWeatherData(data);\n    setError(null);\n  } catch (error) {\n    setError('Failed to fetch weather data');\n    setWeatherData(null);\n  }\n};\n\nfunction App() {\n  const [lat, setLat] = useState('');\n  const [lon, setLon] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleLatChange = (e) => {\n    setLat(e.target.value);\n  };\n\n  const handleLonChange = (e) => {\n    setLon(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    fetchWeatherData(lat, lon, setWeatherData, setError);\n  };\n\n  return (\n    <div>\n      <h1>Weather App</h1>\n      <label>\n        Latitude:\n        <input type=\"text\" value={lat} onChange={handleLatChange} placeholder=\"Enter latitude\" />\n      </label>\n      <label>\n        Longitude:\n        <input type=\"text\" value={lon} onChange={handleLonChange} placeholder=\"Enter longitude\" />\n      </label>\n      <button onClick={handleSubmit}>Fetch Weather</button>\n      {error && <p>{error}</p>}\n      {weatherData && (\n        <div>\n          <h2>Weather</h2>\n          <p>Temperature: {weatherData.hourly.temperature_2m[0].value} Â°C</p>\n          <p>Precipitation: {weatherData.hourly.precipitation[0].value} mm</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAG,mBAAmB,CAAC,CAAC;;AAErC,MAAMC,gBAAgB,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,EAAEC,cAAc,EAAEC,QAAQ,KAAK;EACrE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,mDAAkDL,GAAI,cAAaC,GAAI,4DAA2D,CAAC;IACjK,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;IAC3D;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClCR,cAAc,CAACO,IAAI,CAAC;IACpBN,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdR,QAAQ,CAAC,8BAA8B,CAAC;IACxCD,cAAc,CAAC,IAAI,CAAC;EACtB;AACF,CAAC;AAED,SAASU,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACb,GAAG,EAAEc,MAAM,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACM,GAAG,EAAEc,MAAM,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACqB,WAAW,EAAEd,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgB,KAAK,EAAER,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMsB,eAAe,GAAIC,CAAC,IAAK;IAC7BJ,MAAM,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMC,eAAe,GAAIH,CAAC,IAAK;IAC7BH,MAAM,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACxB,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBvB,gBAAgB,CAACC,GAAG,EAAEC,GAAG,EAAEC,cAAc,EAAEC,QAAQ,CAAC;EACtD,CAAC;EAED,oBACEN,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB9B,OAAA;MAAA0B,QAAA,GAAO,WAEL,eAAA1B,OAAA;QAAO+B,IAAI,EAAC,MAAM;QAACR,KAAK,EAAEpB,GAAI;QAAC6B,QAAQ,EAAEZ,eAAgB;QAACa,WAAW,EAAC;MAAgB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF,CAAC,eACR9B,OAAA;MAAA0B,QAAA,GAAO,YAEL,eAAA1B,OAAA;QAAO+B,IAAI,EAAC,MAAM;QAACR,KAAK,EAAEnB,GAAI;QAAC4B,QAAQ,EAAER,eAAgB;QAACS,WAAW,EAAC;MAAiB;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC,eACR9B,OAAA;MAAQkC,OAAO,EAAET,YAAa;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpDhB,KAAK,iBAAId,OAAA;MAAA0B,QAAA,EAAIZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBX,WAAW,iBACVnB,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChB9B,OAAA;QAAA0B,QAAA,GAAG,eAAa,EAACP,WAAW,CAACgB,MAAM,CAACC,cAAc,CAAC,CAAC,CAAC,CAACb,KAAK,EAAC,QAAG;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnE9B,OAAA;QAAA0B,QAAA,GAAG,iBAAe,EAACP,WAAW,CAACgB,MAAM,CAACE,aAAa,CAAC,CAAC,CAAC,CAACd,KAAK,EAAC,KAAG;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACd,EAAA,CAxCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}