{"ast":null,"code":"var _jsxFileName = \"/Users/amiyaraskar/UT/23-24/HCI/cs378-p4/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// This imports bootstrap css styles. You can use bootstrap or your own classes by using the className attribute in your elements.\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchWeatherData = async (lat, lon, setWeatherData, setError) => {\n  try {\n    const response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=temperature_2m,precipitation&start=now&end=now+12h`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    setWeatherData(data);\n    setError(null);\n  } catch (error) {\n    setError('Failed to fetch weather data');\n    setWeatherData(null);\n  }\n};\nconst cities = {\n  Dallas: {\n    lat: 32.7767,\n    lon: -96.7970\n  },\n  Houston: {\n    lat: 29.7604,\n    lon: -95.3698\n  },\n  Austin: {\n    lat: 30.2672,\n    lon: -97.7431\n  }\n};\nfunction App() {\n  _s();\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n  const handleCitySelect = cityName => {\n    const city = cities[cityName];\n    setSelectedCity(cityName);\n    fetchWeatherData(city.lat, city.lon, setWeatherData, setError);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(cities).map(cityName => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCitySelect(cityName),\n        children: cityName\n      }, cityName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Weather for \", selectedCity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", weatherData.hourly.temperature_2m[0].value, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Precipitation: \", weatherData.hourly.precipitation[0].value, \" mm\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wUPKsX6thzQSRjpeCPq8Zmy8RqQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","fetchWeatherData","lat","lon","setWeatherData","setError","response","fetch","ok","Error","status","data","json","error","cities","Dallas","Houston","Austin","App","_s","selectedCity","setSelectedCity","weatherData","handleCitySelect","cityName","city","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","onClick","hourly","temperature_2m","value","precipitation","_c","$RefreshReg$"],"sources":["/Users/amiyaraskar/UT/23-24/HCI/cs378-p4/src/App.js"],"sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \n// This imports bootstrap css styles. You can use bootstrap or your own classes by using the className attribute in your elements.\nimport React, { useState, useEffect } from 'react';\n\nconst fetchWeatherData = async (lat, lon, setWeatherData, setError) => {\n  try {\n    const response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=temperature_2m,precipitation&start=now&end=now+12h`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    setWeatherData(data);\n    setError(null);\n  } catch (error) {\n    setError('Failed to fetch weather data');\n    setWeatherData(null);\n  }\n};\n\nconst cities = {\n  Dallas: { lat: 32.7767, lon: -96.7970 },\n  Houston: { lat: 29.7604, lon: -95.3698 },\n  Austin: { lat: 30.2672, lon: -97.7431 },\n};\n\nfunction App() {\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleCitySelect = (cityName) => {\n    const city = cities[cityName];\n    setSelectedCity(cityName);\n    fetchWeatherData(city.lat, city.lon, setWeatherData, setError);\n  };\n\n  return (\n    <div>\n      <h1>Weather App</h1>\n      <div>\n        {Object.keys(cities).map((cityName) => (\n          <button key={cityName} onClick={() => handleCitySelect(cityName)}>\n            {cityName}\n          </button>\n        ))}\n      </div>\n      {error && <p>{error}</p>}\n      {weatherData && (\n        <div>\n          <h2>Weather for {selectedCity}</h2>\n          <p>Temperature: {weatherData.hourly.temperature_2m[0].value} Â°C</p>\n          <p>Precipitation: {weatherData.hourly.precipitation[0].value} mm</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}