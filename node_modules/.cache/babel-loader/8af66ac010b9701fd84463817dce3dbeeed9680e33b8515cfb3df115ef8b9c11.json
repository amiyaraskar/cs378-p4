{"ast":null,"code":"var _jsxFileName = \"/Users/amiyaraskar/UT/23-24/HCI/cs378-p4/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// This imports bootstrap css styles. You can use bootstrap or your own classes by using the className attribute in your elements.\nimport React, { useState, useEffect } from 'react';\n\n// WEATHER FORECAST: https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41&hourly=temperature_2m\n// GEOCODING: https://geocoding-api.open-meteo.com/v1/search?name=Berlin&count=10&language=en&format=json\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const cities = {\n    Dallas: {\n      lat: 32.7767,\n      lon: -96.7970\n    },\n    Houston: {\n      lat: 29.7604,\n      lon: -95.3698\n    },\n    Austin: {\n      lat: 30.2672,\n      lon: -97.7431\n    }\n  };\n  const fetchWeatherData = async (lat, lon) => {\n    const response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=temperature_2m,precipitation&start=now&end=now+12h`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    setWeatherData(data);\n  };\n  const handleCityClick = city => {\n    const {\n      lat,\n      lon\n    } = cities[city];\n    fetchWeatherData(lat, lon);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchWeatherData(latitude, longitude);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-buttons\",\n      children: Object.keys(cities).map(city => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCityClick(city),\n        children: city\n      }, city, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"latlong-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: latitude,\n        onChange: e => setLatitude(e.target.value),\n        placeholder: \"Latitude\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: longitude,\n        onChange: e => setLongitude(e.target.value),\n        placeholder: \"Longitude\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherDisplay\",\n      children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", weatherData && weatherData.hourly && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", weatherData.hourly.time.map((time, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0Time: \", new Date(time).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            }), \", \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0Temperature: \", weatherData.hourly.temperature_2m[index], \"\\xB0C, \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0Precipitation: \", weatherData.hourly.precipitation[index], \"mm \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n          }, time, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this);\n        }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5GXTR05OQZOIwsND6BIz+pgIqL4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","latitude","setLatitude","longitude","setLongitude","cities","Dallas","lat","lon","Houston","Austin","fetchWeatherData","response","fetch","ok","Error","status","data","json","handleCityClick","city","handleSubmit","e","preventDefault","className","children","Object","keys","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","hourly","time","index","Date","toLocaleTimeString","hour","minute","temperature_2m","precipitation","_c","$RefreshReg$"],"sources":["/Users/amiyaraskar/UT/23-24/HCI/cs378-p4/src/App.js"],"sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \n// This imports bootstrap css styles. You can use bootstrap or your own classes by using the className attribute in your elements.\nimport React, { useState, useEffect } from 'react';\n\n// WEATHER FORECAST: https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41&hourly=temperature_2m\n// GEOCODING: https://geocoding-api.open-meteo.com/v1/search?name=Berlin&count=10&language=en&format=json\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  \n  const cities = {\n    Dallas: { lat: 32.7767, lon: -96.7970 },\n    Houston: { lat: 29.7604, lon: -95.3698 },\n    Austin: { lat: 30.2672, lon: -97.7431 },\n  };\n  \n  const fetchWeatherData = async (lat, lon) => {\n    const response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=temperature_2m,precipitation&start=now&end=now+12h`);\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n  \n    const data = await response.json();\n    setWeatherData(data);\n  };\n  \n  const handleCityClick = city => {\n    const { lat, lon } = cities[city];\n    fetchWeatherData(lat, lon);\n  };\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchWeatherData(latitude, longitude);\n  };\n  \n  return (\n    <div className=\"App\">\n      <div className=\"city-buttons\">\n        {Object.keys(cities).map(city => (\n          <button key={city} onClick={() => handleCityClick(city)}>{city}</button>\n        ))}\n      </div>\n          \n      <form onSubmit={handleSubmit} className=\"latlong-input\">\n        <input type=\"text\" value={latitude} onChange={e => setLatitude(e.target.value)} placeholder=\"Latitude\" />\n          <input type=\"text\" value={longitude} onChange={e => setLongitude(e.target.value)} placeholder=\"Longitude\" />\n          <button type=\"submit\">Get Weather</button>\n        </form>\n        <div className=\"weatherDisplay\">\n          {weatherData && weatherData.hourly && (\n            <div>\n              {weatherData.hourly.time.map((time, index) => {\n                return (\n                  <div key={time}>\n                    Time: {new Date(time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}, \n                    Temperature: {weatherData.hourly.temperature_2m[index]}°C, \n                    Precipitation: {weatherData.hourly.precipitation[index]}mm\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n  \n  export default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}