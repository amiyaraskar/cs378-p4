{"ast":null,"code":"var _jsxFileName = \"/Users/amiyaraskar/UT/23-24/HCI/cs378-p4/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// This imports bootstrap css styles. You can use bootstrap or your own classes by using the className attribute in your elements.\nimport React, { useState, useEffect } from 'react';\n\n// WEATHER FORECAST: https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41&hourly=temperature_2m\n// GEOCODING: https://geocoding-api.open-meteo.com/v1/search?name=Berlin&count=10&language=en&format=json\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const cities = {\n    Dallas: {\n      lat: 32.7767,\n      lon: -96.7970\n    },\n    Houston: {\n      lat: 29.7604,\n      lon: -95.3698\n    },\n    Austin: {\n      lat: 30.2672,\n      lon: -97.7431\n    }\n  };\n  const fetchWeatherData = async (lat, lon) => {\n    const response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=temperature_2m,precipitation&start=now&end=now+12h`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    setWeatherData(data);\n  };\n  const handleCityClick = city => {\n    const {\n      lat,\n      lon\n    } = cities[city];\n    fetchWeatherData(lat, lon);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchWeatherData(latitude, longitude);\n  };\n  const celsiusToFahrenheit = celsius => {\n    return Math.round(celsius * 9 / 5 + 32);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-buttons\",\n      children: Object.keys(cities).map(city => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCityClick(city),\n        children: city\n      }, city, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"latlong-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: latitude,\n          onChange: e => setLatitude(e.target.value),\n          placeholder: \"Latitude\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: longitude,\n          onChange: e => setLongitude(e.target.value),\n          placeholder: \"Longitude\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mt-2\",\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherDisplay\",\n      children: weatherData && weatherData.hourly && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weatherRows\",\n        children: weatherData.hourly.time.map((time, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weatherRow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeColumn\",\n            children: [\"Time: \", new Date(time).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temperatureColumn\",\n            children: [\"Temperature: \", celsiusToFahrenheit(weatherData.hourly.temperature_2m[index]), \"\\xB0F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this)]\n        }, time, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5GXTR05OQZOIwsND6BIz+pgIqL4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","latitude","setLatitude","longitude","setLongitude","cities","Dallas","lat","lon","Houston","Austin","fetchWeatherData","response","fetch","ok","Error","status","data","json","handleCityClick","city","handleSubmit","e","preventDefault","celsiusToFahrenheit","celsius","Math","round","className","children","Object","keys","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","hourly","time","index","Date","toLocaleTimeString","hour","minute","temperature_2m","_c","$RefreshReg$"],"sources":["/Users/amiyaraskar/UT/23-24/HCI/cs378-p4/src/App.js"],"sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \n// This imports bootstrap css styles. You can use bootstrap or your own classes by using the className attribute in your elements.\nimport React, { useState, useEffect } from 'react';\n\n// WEATHER FORECAST: https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41&hourly=temperature_2m\n// GEOCODING: https://geocoding-api.open-meteo.com/v1/search?name=Berlin&count=10&language=en&format=json\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState(null);\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  \n  const cities = {\n    Dallas: { lat: 32.7767, lon: -96.7970 },\n    Houston: { lat: 29.7604, lon: -95.3698 },\n    Austin: { lat: 30.2672, lon: -97.7431 },\n  };\n  \n  const fetchWeatherData = async (lat, lon) => {\n    const response = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=temperature_2m,precipitation&start=now&end=now+12h`);\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n  \n    const data = await response.json();\n    setWeatherData(data);\n  };\n  \n  const handleCityClick = city => {\n    const { lat, lon } = cities[city];\n    fetchWeatherData(lat, lon);\n  };\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    fetchWeatherData(latitude, longitude);\n  };\n\n  const celsiusToFahrenheit = (celsius) => {\n    return Math.round((celsius * 9/5) + 32);\n  };\n  \n  return (\n    <div className=\"App\">\n      <div className=\"city-buttons\">\n        {Object.keys(cities).map(city => (\n          <button key={city} onClick={() => handleCityClick(city)}>{city}</button>\n        ))}\n      </div>\n          \n      <form onSubmit={handleSubmit} className=\"latlong-input\">\n        <div className=\"input-group\">\n          <input type=\"text\" value={latitude} onChange={e => setLatitude(e.target.value)} placeholder=\"Latitude\" className=\"form-control\" />\n          <input type=\"text\" value={longitude} onChange={e => setLongitude(e.target.value)} placeholder=\"Longitude\" className=\"form-control\" />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary mt-2\">Get Weather</button>\n      </form>\n\n      <div className=\"weatherDisplay\">\n        {weatherData && weatherData.hourly && (\n          <div className=\"weatherRows\">\n            {weatherData.hourly.time.map((time, index) => (\n              <div key={time} className=\"weatherRow\">\n                <div className=\"timeColumn\">Time: {new Date(time).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</div>\n                <div className=\"temperatureColumn\">Temperature: {celsiusToFahrenheit(weatherData.hourly.temperature_2m[index])}Â°F</div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n    );\n  }\n  \n  export default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}